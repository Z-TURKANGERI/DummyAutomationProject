<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="35" hostname="DESKTOP-9E25G1U" failures="2" tests="4" name="smoke Test cases" time="44.993" errors="0" timestamp="2023-07-31T12:47:44 IST">
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByProvidingMandatoryField" time="2.868"/>
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationWithValidCredential" time="1.662"/>
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogout" name="verifyLoggingOutFromApplicationFromMyAccountDropdown" time="11.896">
    <failure type="org.openqa.selenium.NoSuchElementException" message="no such element: Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;link text&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;Your Store&amp;quot;}
  (Session info: MicrosoftEdge=115.0.1901.188)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: &amp;apos;4.6.0&amp;apos;, revision: &amp;apos;79f1c02ae20&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.5&amp;apos;
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [26e29f08f0b8d2015faed12ee87d1988, findElement {using=link text, value=Your Store}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 115.0.1901.188, ms:edgeOptions: {debuggerAddress: localhost:59894}, msedge: {msedgedriverVersion: 115.0.1901.188 (b51b39339c4..., userDataDir: C:\Users\Zuber\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59894/devtoo..., se:cdpVersion: 115.0.1901.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 26e29f08f0b8d2015faed12ee87d1988">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"Your Store"}
  (Session info: MicrosoftEdge=115.0.1901.188)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.6.0', revision: '79f1c02ae20'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [26e29f08f0b8d2015faed12ee87d1988, findElement {using=link text, value=Your Store}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 115.0.1901.188, ms:edgeOptions: {debuggerAddress: localhost:59894}, msedge: {msedgedriverVersion: 115.0.1901.188 (b51b39339c4..., userDataDir: C:\Users\Zuber\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59894/devtoo..., se:cdpVersion: 115.0.1901.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 26e29f08f0b8d2015faed12ee87d1988
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:541)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.getText(Unknown Source)
at com.tutorialsninja.qa.pageObjects.HomePageObjects.yourStoreActualText(HomePageObjects.java:57)
at com.tutorialsninja.qa.testCases.TestLogout.verifyLoggingOutFromApplicationFromMyAccountDropdown(TestLogout.java:47)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- verifyLoggingOutFromApplicationFromMyAccountDropdown -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestForgetPassword" name="verifyForgetPasswordUserAbleToRestorePassword" time="1.386">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at com.tutorialsninja.qa.testCases.TestForgetPassword.verifyForgetPasswordUserAbleToRestorePassword(TestForgetPassword.java:67)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- verifyForgetPasswordUserAbleToRestorePassword -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByFillingPasswordAndWithoutFillingConfirmPassword" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountByFillingPasswordAndWithoutFillingConfirmPassword -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountWhetherLeadingandTrailingSpacesTrimmed" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountWhetherLeadingandTrailingSpacesTrimmed -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationWithInvalidCredential" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationWithInvalidCredential -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationWithMultipleTimeUnsuccessfulLoginAttempt" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationWithMultipleTimeUnsuccessfulLoginAttempt -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountBySelectingNewsletterNO" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountBySelectingNewsletterNO -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestForgetPassword" name="verifyForgetPasswordCheckLoggingIntoApplicationWithOldPasswordAfterResettingPasswordIntitiatedProcess" time="0.0">
    <ignored/>
  </testcase> <!-- verifyForgetPasswordCheckLoggingIntoApplicationWithOldPasswordAfterResettingPasswordIntitiatedProcess -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByProvidingSpacesInTheFields" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingSpacesInTheFields -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountCheckPrivacyPolicyCheckboxIsNotSelectedByDefault" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountCheckPrivacyPolicyCheckboxIsNotSelectedByDefault -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationWithValidUserNameInvalidPassword" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationWithValidUserNameInvalidPassword -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationWithoutProvidingAnyCredentials" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationWithoutProvidingAnyCredentials -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationCheckPasswordIsNotVisibleInPageSource" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationCheckPasswordIsNotVisibleInPageSource -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogout" name="verifyLoggingOutFromApplicationLogoutOptionShouldNotDisplayBeforeLoginUnderRightColumn" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoggingOutFromApplicationLogoutOptionShouldNotDisplayBeforeLoginUnderRightColumn -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationWithValidCredentialBrowsingBackUsingBrowserBackButton" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationWithValidCredentialBrowsingBackUsingBrowserBackButton -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationCheckUserIsAbleToNavigateToOtherPages" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationCheckUserIsAbleToNavigateToOtherPages -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationAfterChangingPassword" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationAfterChangingPassword -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationWithValidPasswordAndInvalidUserName" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationWithValidPasswordAndInvalidUserName -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByProvidingExistingAccount" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingExistingAccount -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationaLoginAfterThatLogoutAndBrowserBackUsingBrowserButtton" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationaLoginAfterThatLogoutAndBrowserBackUsingBrowserButtton -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestForgetPassword" name="verifyForgetPasswordWithNonRegisteredAccount" time="0.0">
    <ignored/>
  </testcase> <!-- verifyForgetPasswordWithNonRegisteredAccount -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByInvalidEmails" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountByInvalidEmails -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogout" name="verifyLoggingOutFromApplicationAfterLogoutFromOneAccountImmediatelyLoginFromAnotherAccount" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoggingOutFromApplicationAfterLogoutFromOneAccountImmediatelyLoginFromAnotherAccount -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringNotificationMessagesForMandatoryFieldBYNotProvidingFileds" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringNotificationMessagesForMandatoryFieldBYNotProvidingFileds -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestForgetPassword" name="verifyForgetPasswordWithoutProvidingEmailAddress" time="0.0">
    <ignored/>
  </testcase> <!-- verifyForgetPasswordWithoutProvidingEmailAddress -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountBySelectingNewsletterNOYES" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountBySelectingNewsletterNOYES -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogout" name="verifyLoggingOutFromApplicationFromLogoutOptionOnPage" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoggingOutFromApplicationFromLogoutOptionOnPage -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationCheckForgettenPasswordLinkIsPresnetAndClickable" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationCheckForgettenPasswordLinkIsPresnetAndClickable -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountToCheckPageFollowingComplexityStandardsPassword" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountToCheckPageFollowingComplexityStandardsPassword -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationAfterChangingPasswordAndChangingBackToOriginalPassword" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationAfterChangingPasswordAndChangingBackToOriginalPassword -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogin" name="verifyLoginToApplicationByCopyingPasswordFiledText" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoginToApplicationByCopyingPasswordFiledText -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogout" name="verifyLoggingOutFromApplicationAndBrowsingBack" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoggingOutFromApplicationAndBrowsingBack -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByProvidingDifferentPasswordInPasswordAndConfirmPassword" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingDifferentPasswordInPasswordAndConfirmPassword -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByInvalidPhonenumbers" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountByInvalidPhonenumbers -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestLogout" name="verifyLoggingOutFromApplicationLogoutOptionShouldNotDisplayedBeforeLoginToAccountInAccountDrodown" time="0.0">
    <ignored/>
  </testcase> <!-- verifyLoggingOutFromApplicationLogoutOptionShouldNotDisplayedBeforeLoginToAccountInAccountDrodown -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountWithoutSelectingPrivacyPolicyCheckbox" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountWithoutSelectingPrivacyPolicyCheckbox -->
  <testcase classname="com.tutorialsninja.qa.testCases.TestRegister" name="verifyRegisteringAnAccountByProvidingAllField" time="0.0">
    <ignored/>
  </testcase> <!-- verifyRegisteringAnAccountByProvidingAllField -->
</testsuite> <!-- smoke Test cases -->
